# ==============================
# Server and Application Info
# ==============================
server.port=9095
spring.application.name=api-gateway

# ==============================
# Eureka Configuration
# ==============================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true


# ==============================
# Gateway Configuration
# ==============================
spring.cloud.gateway.discovery.locator.enabled=true
# RECOMMENDATION: Set to true for consistent lowercased service IDs in URIs
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# 1. Public: Login Endpoint (handled by SecurityConfig.permitAll())
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=lb://auth-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/customer/login,/api/auth/restaurant/login
spring.cloud.gateway.routes[0].predicates[1]=Method=POST
#spring.cloud.gateway.routes[0].filters[0]=StripPrefix=2

# 2. Public: Login Endpoint (handled by SecurityConfig.permitAll())
spring.cloud.gateway.routes[1].id=auth-service
spring.cloud.gateway.routes[1].uri=lb://auth-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/auth/restaurant/login
spring.cloud.gateway.routes[1].predicates[1]=Method=POST

# --- Customer Service Routes ---
# 2. Public: Customer Registration Endpoint (handled by SecurityConfig.permitAll())
spring.cloud.gateway.routes[2].id=customer-service
spring.cloud.gateway.routes[2].uri=lb://customer-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/customers/register
spring.cloud.gateway.routes[2].predicates[1]=Method=POST

# --- Customer Service Routes ---
# 3. Public: Customer Registration Endpoint (handled by SecurityConfig.permitAll())
spring.cloud.gateway.routes[3].id=restaurant-service
spring.cloud.gateway.routes[3].uri=lb://restaurant-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/restaurants/register
spring.cloud.gateway.routes[3].predicates[1]=Method=POST

# --- Internal Block Route (for /internal/**5 ---
# This route is still useful to explicitly block at the Gateway level,
# even though SecurityConfig also has denyAll() for /internal/**
spring.cloud.gateway.routes[4].id=internal_block_route
spring.cloud.gateway.routes[4].uri=no://op
spring.cloud.gateway.routes[4].predicates[0]=Path=/internal/**
spring.cloud.gateway.routes[4].filters[0]=SetStatus=403

# Protected: Customer Profile GET/PUT by ID
spring.cloud.gateway.routes[5].id=customer-service
spring.cloud.gateway.routes[5].uri=lb://customer-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/customers/user
spring.cloud.gateway.routes[5].predicates[1]=Method=GET
spring.cloud.gateway.routes[5].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[5].filters[0].args.requiredRoles=CUSTOMER

# Protected: Customer Profile PUT by ID
spring.cloud.gateway.routes[6].id=customer-service
spring.cloud.gateway.routes[6].uri=lb://customer-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/customers/user
spring.cloud.gateway.routes[6].predicates[1]=Method=PUT
spring.cloud.gateway.routes[6].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[6].filters[0].args.requiredRoles=CUSTOMER

# Protected: Adding Menu Item into restaurant
spring.cloud.gateway.routes[7].id=menu-service
spring.cloud.gateway.routes[7].uri=lb://menu-service
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/menu/restaurant
spring.cloud.gateway.routes[7].predicates[1]=Method=POST
spring.cloud.gateway.routes[7].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[7].filters[0].args.requiredRoles=RESTAURANT


# Protected: Updating Menu Item into restaurant
spring.cloud.gateway.routes[8].id=menu-service
spring.cloud.gateway.routes[8].uri=lb://menu-service
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/menu/{itemId}
spring.cloud.gateway.routes[8].predicates[1]=Method=PUT
spring.cloud.gateway.routes[8].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[8].filters[0].args.requiredRoles=RESTAURANT

# Protected: Updating Menu Item into restaurant
spring.cloud.gateway.routes[9].uri=lb://menu-service
spring.cloud.gateway.routes[9].id=menu-service
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/menu/{itemId}
spring.cloud.gateway.routes[9].predicates[1]=Method=DELETE
spring.cloud.gateway.routes[9].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[9].filters[0].args.requiredRoles=RESTAURANT

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[10].uri=lb://menu-service
spring.cloud.gateway.routes[10].id=menu-service
spring.cloud.gateway.routes[10].predicates[0]=Path=/api/menu/{itemId}
spring.cloud.gateway.routes[10].predicates[1]=Method=GET
#spring.cloud.gateway.routes[10].filters[0].name=CentralizedAuthFilter
#spring.cloud.gateway.routes[10].filters[0].args.requiredRoles=RESTAURANT,CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[11].uri=lb://menu-service
spring.cloud.gateway.routes[11].id=menu-service
spring.cloud.gateway.routes[11].predicates[0]=Path=/api/menu/restaurant/{restaurantId}
spring.cloud.gateway.routes[11].predicates[1]=Method=GET

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[12].uri=lb://order-service
spring.cloud.gateway.routes[12].id=order-service
spring.cloud.gateway.routes[12].predicates[0]=Path=/api/cart/items
spring.cloud.gateway.routes[12].predicates[1]=Method=POST
spring.cloud.gateway.routes[12].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[12].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[13].uri=lb://order-service
spring.cloud.gateway.routes[13].id=order-service
spring.cloud.gateway.routes[13].predicates[0]=Path=/api/cart/items/{itemId}
spring.cloud.gateway.routes[13].predicates[1]=Method=PUT
spring.cloud.gateway.routes[13].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[13].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[14].uri=lb://order-service
spring.cloud.gateway.routes[14].id=order-service
spring.cloud.gateway.routes[14].predicates[0]=Path=/api/cart/items/{itemId}
spring.cloud.gateway.routes[14].predicates[1]=Method=DELETE
spring.cloud.gateway.routes[14].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[14].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[15].uri=lb://order-service
spring.cloud.gateway.routes[15].id=order-service
spring.cloud.gateway.routes[15].predicates[0]=Path=/api/cart
spring.cloud.gateway.routes[15].predicates[1]=Method=GET
spring.cloud.gateway.routes[15].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[15].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[16].uri=lb://order-service
spring.cloud.gateway.routes[16].id=order-service
spring.cloud.gateway.routes[16].predicates[0]=Path=/api/cart
spring.cloud.gateway.routes[16].predicates[1]=Method=DELETE
spring.cloud.gateway.routes[16].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[16].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[17].uri=lb://order-service
spring.cloud.gateway.routes[17].id=order-service
spring.cloud.gateway.routes[17].predicates[0]=Path=/api/orders
spring.cloud.gateway.routes[17].predicates[1]=Method=POST
spring.cloud.gateway.routes[17].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[17].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[18].uri=lb://order-service
spring.cloud.gateway.routes[18].id=order-service
spring.cloud.gateway.routes[18].predicates[0]=Path=/api/orders/user
spring.cloud.gateway.routes[18].predicates[1]=Method=GET
spring.cloud.gateway.routes[18].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[18].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[19].uri=lb://order-service
spring.cloud.gateway.routes[19].id=order-service
spring.cloud.gateway.routes[19].predicates[0]=Path=/api/orders/restaurant
spring.cloud.gateway.routes[19].predicates[1]=Method=GET
spring.cloud.gateway.routes[19].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[19].filters[0].args.requiredRoles=RESTAURANT

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[20].uri=lb://order-service
spring.cloud.gateway.routes[20].id=order-service
spring.cloud.gateway.routes[20].predicates[0]=Path=/api/orders/status
spring.cloud.gateway.routes[20].predicates[1]=Method=PUT
spring.cloud.gateway.routes[20].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[20].filters[0].args.requiredRoles=RESTAURANT

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[21].uri=lb://order-service
spring.cloud.gateway.routes[21].id=order-service
spring.cloud.gateway.routes[21].predicates[0]=Path=/api/orders/{orderId}
spring.cloud.gateway.routes[21].predicates[1]=Method=GET
spring.cloud.gateway.routes[21].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[21].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[22].uri=lb://payment-module
spring.cloud.gateway.routes[22].id=payment-module
spring.cloud.gateway.routes[22].predicates[0]=Path=/api/payments/initiate
spring.cloud.gateway.routes[22].predicates[1]=Method=POST
spring.cloud.gateway.routes[22].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[22].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[23].uri=lb://payment-module
spring.cloud.gateway.routes[23].id=payment-module
spring.cloud.gateway.routes[23].predicates[0]=Path=/api/payments/confirm
spring.cloud.gateway.routes[23].predicates[1]=Method=PUT
spring.cloud.gateway.routes[23].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[23].filters[0].args.requiredRoles=CUSTOMER

# Protected: View menu items for restaurant and customer
spring.cloud.gateway.routes[24].uri=lb://payment-module
spring.cloud.gateway.routes[24].id=payment-module
spring.cloud.gateway.routes[24].predicates[0]=Path=/api/payments/order/{orderId}
spring.cloud.gateway.routes[24].predicates[1]=Method=GET
spring.cloud.gateway.routes[24].filters[0].name=CentralizedAuthFilter
spring.cloud.gateway.routes[24].filters[0].args.requiredRoles=CUSTOMER



# Enable actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.gateway.enabled=true
management.endpoints.enabled-by-default=true

logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.server=DEBUG

jwt.secret=d+SUm+3MKbXEvbxSoDEiZVar+UvJlSVbjZSoLQPomzE=
jwt.expiration.ms=3600000
